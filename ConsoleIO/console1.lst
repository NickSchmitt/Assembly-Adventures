     1                                  ; console1.asm
     2                                  section .data
     3 00000000 48656C6C6F2C20576F-         msg1        db      "Hello, World!",10,0
     3 00000009 726C64210A00       
     4                                      msg1len     equ     $-msg1
     5 0000000F 596F7572207475726E-         msg2        db      "Your turn: ",0
     5 00000018 3A2000             
     6                                      msg2len     equ     $-msg2
     7 0000001B 596F7520616E737765-         msg3        db      "You answers: ",0
     7 00000024 72733A2000         
     8                                      msg3len     equ     $-msg3
     9                                      inputlen    equ     10                      ; length of inputbuffer
    10                                  section .bss
    11 00000000 <res 0000000B>              input       resb    inputlen+1              ; provide space for ending 0
    12                                  section .text
    13                                      global main
    14                                  main:
    15 00000000 55                          push        rbp
    16 00000001 4889E5                      mov         rbp, rsp
    17 00000004 48BE-                       mov         rsi, msg1           ; print first string
    17 00000006 [0000000000000000] 
    18 0000000E BA0F000000                  mov         rdx, msg1len
    19 00000013 E852000000                  call        prints
    20 00000018 48BE-                       mov         rsi, msg2           ; print second string, no NL
    20 0000001A [0F00000000000000] 
    21 00000022 BA0C000000                  mov         rdx, msg2len
    22 00000027 E83E000000                  call        prints
    23 0000002C 48BE-                       mov         rsi, input          ; address of inputbuffer
    23 0000002E [0000000000000000] 
    24 00000036 BA0A000000                  mov         rdx, inputlen       ; lengh of inputbuffer
    25 0000003B E83C000000                  call        reads               ; wait for input
    26 00000040 48BE-                       mov         rsi, msg3           ; print third string
    26 00000042 [1B00000000000000] 
    27 0000004A BA0E000000                  mov         rdx, msg3len
    28 0000004F E816000000                  call        prints
    29 00000054 48BE-                       mov         rsi, input          ; print the inputbuffer
    29 00000056 [0000000000000000] 
    30 0000005E BA0A000000                  mov         rdx, inputlen       ; length of inputbuffer
    31 00000063 E802000000                  call        prints
    32 00000068 C9                      leave
    33 00000069 C3                      ret
    34                                  
    35                                  prints:
    36 0000006A 55                          push        rbp
    37 0000006B 4889E5                      mov         rbp, rsp
    38                                      ; rsi contains address of string
    39                                      ; rdx contains length of string
    40 0000006E B801000000                  mov         rax, 1              ; 1 = write
    41 00000073 BF01000000                  mov         rdi, 1              ; 1 = stdout
    42 00000078 0F05                        syscall
    43 0000007A C9                      leave
    44 0000007B C3                      ret
    45                                  
    46                                  reads:
    47 0000007C 55                          push        rbp
    48 0000007D 4889E5                      mov         rbp, rsp
    49                                      ; rsi contains address of the inputbuffer
    50                                      ; rdi contains length of the inputbuffer     
    51 00000080 B800000000                  mov         rax, 0              ; 0 = read
    52 00000085 BF01000000                  mov         rdi, 1              ; 1 = stdin
    53 0000008A 0F05                        syscall
    54 0000008C C9                      leave
    55 0000008D C3                      ret
